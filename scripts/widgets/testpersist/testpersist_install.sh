#!/bin/bash
#
# Installation du widget Test Persist CSV
# Version 3.0 - Support tra√ßabilit√© hebdomadaire avec archivage automatique
#

source "/opt/maxlink/scripts/_core/common_functions.sh"

WIDGET_NAME="testpersist"

# V√©rifications pr√©alables
echo "========================================================================"
echo "Installation du widget Test Persist CSV avec Tra√ßabilit√© Hebdomadaire"
echo "========================================================================"
echo ""
echo "‚ó¶ V√©rification des pr√©requis..."

# V√©rifier que le broker MQTT est actif
if ! check_mqtt_broker; then
    echo "  ‚Ü¶ Le broker MQTT doit √™tre install√© et actif ‚úó"
    echo ""
    echo "Veuillez d'abord installer MQTT avec mqtt_install.sh"
    exit 1
fi
echo "  ‚Ü¶ Broker MQTT actif ‚úì"

# üéØ CORRECTION : Nouveau chemin unifi√© dans archives
STORAGE_DIR="/var/www/maxlink-dashboard/archives"
ARCHIVES_DIR="$STORAGE_DIR"

echo ""
echo "‚ó¶ Pr√©paration du r√©pertoire de stockage..."

# Cr√©er le r√©pertoire de base MaxLink Dashboard s'il n'existe pas
if [ ! -d "/var/www/maxlink-dashboard" ]; then
    mkdir -p "/var/www/maxlink-dashboard"
    chown www-data:www-data "/var/www/maxlink-dashboard"
    chmod 755 "/var/www/maxlink-dashboard"
    log_info "R√©pertoire dashboard cr√©√©"
fi

# Cr√©er le r√©pertoire de tra√ßabilit√©
if [ ! -d "$STORAGE_DIR" ]; then
    mkdir -p "$STORAGE_DIR"
    log_info "R√©pertoire cr√©√©: $STORAGE_DIR"
fi

# Cr√©er le r√©pertoire d'archives
if [ ! -d "$ARCHIVES_DIR" ]; then
    mkdir -p "$ARCHIVES_DIR"
    log_info "R√©pertoire d'archives cr√©√©: $ARCHIVES_DIR"
fi

# D√©finir les permissions pour permettre √† root (le service) d'√©crire
# et √† www-data de lire via le dashboard
chown -R www-data:www-data "$STORAGE_DIR"
chmod 775 "$STORAGE_DIR"
chmod 775 "$ARCHIVES_DIR"
echo "  ‚Ü¶ R√©pertoire principal: $STORAGE_DIR ‚úì"
echo "  ‚Ü¶ Archives par ann√©e: $ARCHIVES_DIR/ANN√âE/ ‚úì"
echo "  ‚Ü¶ Propri√©taire: www-data:www-data"
echo "  ‚Ü¶ Permissions: 775 (lecture/√©criture pour www-data et root)"

# Gestion des anciens fichiers CSV (migration douce)
echo ""
echo "‚ó¶ Gestion de la migration vers la tra√ßabilit√© hebdomadaire..."
OLD_CSV_FILES=("509.csv" "511.csv" "RPDT.csv")
MIGRATION_NEEDED=false

for csvfile in "${OLD_CSV_FILES[@]}"; do
    csv_filepath="$STORAGE_DIR/$csvfile"
    if [ -f "$csv_filepath" ]; then
        MIGRATION_NEEDED=true
        echo "  ‚Ü¶ Ancien fichier CSV d√©tect√©: $csvfile"
    fi
done

if [ "$MIGRATION_NEEDED" = true ]; then
    echo ""
    echo "‚ö†Ô∏è  MIGRATION AUTOMATIQUE VERS TRA√áABILIT√â HEBDOMADAIRE"
    echo ""
    echo "Des fichiers CSV de l'ancien syst√®me ont √©t√© d√©tect√©s."
    echo "Ils vont √™tre automatiquement archiv√©s dans le nouveau syst√®me."
    echo ""
    echo "Structure avant migration:"
    echo "  ‚Ä¢ 509.csv, 511.csv, RPDT.csv (fichiers fixes)"
    echo ""
    echo "Structure apr√®s migration:"
    echo "  ‚Ä¢ S29_2025_509.csv, S29_2025_511.csv, S29_2025_RPDT.csv (semaine courante)"
    echo "  ‚Ä¢ 2025/[anciens fichiers] (archiv√©s par ann√©e)"
    echo ""
    read -p "Continuer la migration automatique ? (o/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Oo]$ ]]; then
        echo "Installation annul√©e."
        exit 1
    fi
    
    # Calculer la semaine courante pour la migration
    CURRENT_YEAR=$(date +%Y)
    CURRENT_WEEK=$(date +%V)
    
    echo ""
    echo "‚ó¶ Migration des fichiers existants..."
    
    # Cr√©er le r√©pertoire d'archive pour l'ann√©e courante
    CURRENT_YEAR_ARCHIVE="$ARCHIVES_DIR/$CURRENT_YEAR"
    mkdir -p "$CURRENT_YEAR_ARCHIVE"
    chown www-data:www-data "$CURRENT_YEAR_ARCHIVE"
    chmod 775 "$CURRENT_YEAR_ARCHIVE"
    
    # Archiver les anciens fichiers CSV avec format de semaine
    for csvfile in "${OLD_CSV_FILES[@]}"; do
        csv_filepath="$STORAGE_DIR/$csvfile"
        if [ -f "$csv_filepath" ]; then
            # D√©terminer le nouveau nom bas√© sur la machine
            if [ "$csvfile" = "509.csv" ]; then
                new_name="S${CURRENT_WEEK}_${CURRENT_YEAR}_509.csv"
            elif [ "$csvfile" = "511.csv" ]; then
                new_name="S${CURRENT_WEEK}_${CURRENT_YEAR}_511.csv"
            elif [ "$csvfile" = "RPDT.csv" ]; then
                new_name="S${CURRENT_WEEK}_${CURRENT_YEAR}_RPDT.csv"
            fi
            
            # D√©placer vers les archives
            archive_filepath="$CURRENT_YEAR_ARCHIVE/$new_name"
            mv "$csv_filepath" "$archive_filepath"
            chown www-data:www-data "$archive_filepath"
            chmod 664 "$archive_filepath"
            
            echo "  ‚Ü¶ $csvfile ‚Üí $CURRENT_YEAR/$new_name"
            log_info "Fichier migr√©: $csvfile ‚Üí $new_name"
        fi
    done
    
    echo "  ‚Ü¶ Migration termin√©e ‚úì"
fi

# Migration des anciens fichiers JSON (si pr√©sents)
echo ""
echo "‚ó¶ Nettoyage des anciens fichiers JSON..."
OLD_JSON_FILES=("509.json" "511.json" "998.json" "999.json")
JSON_FOUND=false

for jsonfile in "${OLD_JSON_FILES[@]}"; do
    json_filepath="$STORAGE_DIR/$jsonfile"
    if [ -f "$json_filepath" ]; then
        JSON_FOUND=true
        mv "$json_filepath" "$json_filepath.old"
        echo "  ‚Ü¶ $jsonfile ‚Üí $jsonfile.old"
    fi
done

if [ "$JSON_FOUND" = true ]; then
    echo "  ‚Ü¶ Anciens fichiers JSON archiv√©s avec extension .old"
else
    echo "  ‚Ü¶ Aucun ancien fichier JSON trouv√©"
fi

# Cr√©er le r√©pertoire pour l'ann√©e courante dans les archives
CURRENT_YEAR=$(date +%Y)
CURRENT_YEAR_ARCHIVE="$ARCHIVES_DIR/$CURRENT_YEAR"
if [ ! -d "$CURRENT_YEAR_ARCHIVE" ]; then
    mkdir -p "$CURRENT_YEAR_ARCHIVE"
    chown www-data:www-data "$CURRENT_YEAR_ARCHIVE"
    chmod 775 "$CURRENT_YEAR_ARCHIVE"
    echo ""
    echo "‚ó¶ R√©pertoire d'archive cr√©√© pour l'ann√©e $CURRENT_YEAR"
fi

# Utiliser l'installation standard du core
if widget_standard_install "$WIDGET_NAME"; then
    echo ""
    echo "========================================================================"
    echo "Installation termin√©e avec succ√®s !"
    echo "========================================================================"
    echo ""
    echo "Widget Test Persist CSV avec Tra√ßabilit√© Hebdomadaire v3.0 :"
    echo ""
    echo "‚ó¶ Topic √©cout√©:"
    echo "  ‚Ä¢ SOUFFLAGE/ESP32/RTP (topic unique pour tous les ESP32)"
    echo ""
    echo "‚ó¶ Topics de confirmation:"
    echo "  ‚Ä¢ SOUFFLAGE/ESP32/RTP/CONFIRMED"
    echo ""
    echo "‚ó¶ Nouveau syst√®me de fichiers par semaine:"
    CURRENT_WEEK=$(date +%V)
    CURRENT_YEAR=$(date +%Y)
    echo "  ‚Ä¢ Semaine courante S$CURRENT_WEEK/$CURRENT_YEAR:"
    echo "    - Machine 509 ‚Üí S${CURRENT_WEEK}_${CURRENT_YEAR}_509.csv"
    echo "    - Machine 511 ‚Üí S${CURRENT_WEEK}_${CURRENT_YEAR}_511.csv"
    echo "    - Machines 998 & 999 ‚Üí S${CURRENT_WEEK}_${CURRENT_YEAR}_RPDT.csv"
    echo ""
    echo "‚ó¶ Archivage automatique:"
    echo "  ‚Ä¢ √Ä chaque nouvelle semaine, les fichiers pr√©c√©dents sont"
    echo "    automatiquement d√©plac√©s vers les sous-dossiers par ann√©e"
    echo "  ‚Ä¢ Structure: $STORAGE_DIR/2025/S24_2025_509.csv"
    echo ""
    echo "‚ó¶ Fonctionnalit√©s avanc√©es:"
    echo "  ‚Ä¢ D√©tection automatique de changement de semaine"
    echo "  ‚Ä¢ Archivage transparent sans interruption de service"
    echo "  ‚Ä¢ Migration automatique des anciens fichiers"
    echo "  ‚Ä¢ API de t√©l√©chargement des archives (pour dashboard)"
    echo ""
    echo "‚ó¶ Format d'entr√©e: CSV (inchang√©)"
    echo "  date,heure,√©quipe,codebarre,r√©sultat"
    echo "  Exemple: 08/07/2025,14H46,B,24042551110457205101005321,1"
    echo ""
    echo "‚ó¶ Parsing automatique: (inchang√©)"
    echo "  ‚Ä¢ Machine extraite des positions 7,8,9 du code-barres"
    echo "  ‚Ä¢ Routage automatique vers le bon fichier CSV de semaine"
    echo ""
    echo "‚ó¶ Acc√®s Dashboard: Les fichiers sont directement accessibles"
    echo "  via le dashboard MaxLink dans $STORAGE_DIR"
    echo "  ‚Ä¢ Fichiers courants dans le r√©pertoire principal"
    echo "  ‚Ä¢ Archives organis√©es par ann√©e dans les sous-dossiers"
    echo ""
    echo "IMPORTANT: Les ESP32 n'ont AUCUNE modification √† faire."
    echo "Le syst√®me est 100% compatible avec l'existant."
    echo ""
    
    log_success "Installation widget Test Persist CSV v3.0 termin√©e"
    exit 0
else
    echo ""
    echo "‚úó √âchec de l'installation"
    log_error "Installation √©chou√©e"
    exit 1
fi